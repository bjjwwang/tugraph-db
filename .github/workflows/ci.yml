name: Build (Ubuntu 22.04 + macOS 15)


on:
  push:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: ${{ matrix.os }} build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, macos-15]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install deps (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake ninja-build ccache build-essential pkg-config libssl-dev

      - name: Install deps (macOS)
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install cmake ninja ccache openssl@3 gcc@14
          echo "OPENSSL_ROOT_DIR=$(brew --prefix openssl@3)" >> $GITHUB_ENV
          echo "CC=$(brew --prefix gcc@14)/bin/gcc-14" >> $GITHUB_ENV
          echo "CXX=$(brew --prefix gcc@14)/bin/g++-14" >> $GITHUB_ENV

      - name: Cache ccache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/ccache
            ~/Library/Caches/ccache
          key: ${{ runner.os }}-ccache-${{ hashFiles('**/CMakeLists.txt', '**/*.cmake') }}
          restore-keys: |
            ${{ runner.os }}-ccache-

      - name: Configure (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          cmake -S . -B build -G Ninja \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_CXX_STANDARD=17 -DCMAKE_CXX_STANDARD_REQUIRED=ON \
            -DCMAKE_C_COMPILER_LAUNCHER=ccache \
            -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
            -DOPENSSL_USE_STATIC_LIBS=OFF

      - name: Configure (macOS)
        if: runner.os == 'macOS'
        env:
          OPENSSL_ROOT_DIR: ${{ env.OPENSSL_ROOT_DIR }}
          CC: ${{ env.CC }}
          CXX: ${{ env.CXX }}
        run: |
          cmake -S . -B build -G Ninja \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_CXX_STANDARD=17 -DCMAKE_CXX_STANDARD_REQUIRED=ON \
            -DCMAKE_C_COMPILER_LAUNCHER=ccache \
            -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
            -DOPENSSL_ROOT_DIR="${OPENSSL_ROOT_DIR}" \
            -DOPENSSL_USE_STATIC_LIBS=OFF

      - name: Build
        run: cmake --build build --config Release -j

      - name: Pack artifact
        shell: bash
        run: |
          mkdir -p out
          tar -czf out/build-${{ matrix.os }}.tar.gz -C build .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.os }}
          path: out/build-${{ matrix.os }}.tar.gz
          if-no-files-found: error
          retention-days: 14